library(rBDATPRO)
loadBDAT()
devtools::document()
devtools::document()
library(rBDATPRO)
loadBDAT()
loadBDAT(path = "C:/Program Files (x86)/BDATPRO/R/BDATPRO_R.dll")
devtools::document()
library(rBDATPRO)
library(rBDATPRO)
devtools::document()
library(rBDATPRO)
?get_height_of_d
rm(list=ls())
library(rBDATPRO)
get_vol(1, 30, h = 40, lh = 10, uh = 30, bark = F)
get_vol(1, 30, h = 40, lh = 10, uh = 30, bark = T)
library(rBDATPRO)
rm(list=ls())
get_height_of_d(1, 30, 40, 15)
library(rBDATPRO)
get_height_of_d(1, 30, 40, 15)
rm(list=ls())
loadBDAT(fun = "BDATHXDX")
library(rBDATPRO)
rm(list=ls())
get_height_of_d(1, 30, 40, 15)
?rm
library(rBDATPRO)
rm(list=ls())
get_height_of_d(1, 30, 40, 15)
library(rBDATPRO)
devtools::document()
library(rBDATPRO)
?loadBDAT
devtools::document()
library(rBDATPRO)
?loadBDAT
devtools::document()
?loadBDAT
devtools::document()
?loadBDAT
devtools::document()
?loadBDAT
devtools::document()
?loadBDAT
library(rBDATPRO)
?rBDATPRO
rBDATPRO
library(rBDATPRO)
library(rBDATPRO)
get_vol(1,30,40,10,20, bark = T)
get_vol(1,30,40,10,20, bark = F)
loadBDAT(fun = "BDATVOLABMR")
rm(list=ls())
loadBDAT(fun = "BDATVOLABMR")
loadBDAT(fun = "BDATVOLABOR")
library(rBDATPRO)
get_vol(1,30,40,10,20, bark = F)
library(rBDATPRO)
get_vol(1,30,40,10,20, bark = F)
library(rBDATPRO)
get_vol(1,30,40,10,20, bark = F)
library(rBDATPRO)
get_vol(1,30,40,10,20, bark = F)
library(rBDATPRO)
devtools::document()
devtools::document()
library(rBDATPRO)
loadBDAT("inst/dll/BDATPRO_R.dll", fun = "BDATDORHX")
library(rBDATPRO)
loadBDAT("inst/dll/BDATPRO_R.dll", fun = "BDATDMRHX")
?useDynLib
??useDynLib
devtools::document()
devtools::document()
library(rBDATPRO)
library(rBDATPRO)
rm(list=ls())
library(rBDATPRO)
loadBDAT(fun = "BDATDORHX")
get_height_of_d(1,30,40,15)
library(rBDATPRO)
devtools::document()
library(rBDATPRO)
rm(list=ls())
library(rBDATPRO)
rBDATPRO::BDATDORHX(1,20, 1.3,0,0,30,20,0,0)
ls(.GlobalEnv)
library(rBDATPRO)
loadBDAT(fun = "BDATORHX")
loadBDAT(fun = "BDATDORHX")
library(rBDATPRO)
devtools::document()
devtools::document()
library(rBDATPRO)
library(rBDATPRO)
devtools::document()
library(rBDATPRO)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(rBDATPRO)
devtools::document()
library(rBDATPRO)
rm(list=ls())
?loadBDAT
loadBDAT(fun = 'BDATDORHX')
rm(list=ls())
library(rBDATPRO)
devtools::document()
library(devtools)
?install_github
cumsum(dnorm(0.01:0.99, 0, 1))
0.01:0.99
cumsum(dnorm(seq(0.01, 0.99, 0.01), 0, 1))
x <- seq(0.01, 0.99, 0.01)
y <- cumsum(dnorm(seq(0.01, 0.99, 0.01), 0, 1))
plot(y~x)
x <- seq(-3, 3, 0.01)
y <- cumsum(x, 0, 1))
y <- cumsum(x, 0, 1)
y <- cumsum(dnorm(x, 0, 1))
plot(y~x)
BDATVOLABMR <- function(
wBDATBArtNr,
wD1,
wH1,
wD2,
wH2,
wHges,
wA,
wB,
wSekLng,
wIErr,
wVolABmR
){
volume <- .Fortran(
# "BDATVolABmR",
"bdatvolabmr",
as.integer(wBDATBArtNr),
as.single(wD1),
as.single(wH1),
as.single(wD2),
as.single(wH2),
as.single(wHges),
as.single(wA),
as.single(wB),
as.single(wSekLng),
as.integer(wIErr),
VolABmR = as.single(wVolABmR)
)$VolABmR
return(volume)
}
library(rBDATPRO)
is.loaded("bdatvolabmr")
is.loaded("BDATVOLABmR")
is.loaded("BDATVolABmR")
BDATVOLABMR <- function(
wBDATBArtNr,
wD1,
wH1,
wD2,
wH2,
wHges,
wA,
wB,
wSekLng,
wIErr,
wVolABmR
){
volume <- .Fortran(
"BDATVolABmR",
# "bdatvolabmr",
as.integer(wBDATBArtNr),
as.single(wD1),
as.single(wH1),
as.single(wD2),
as.single(wH2),
as.single(wHges),
as.single(wA),
as.single(wB),
as.single(wSekLng),
as.integer(wIErr),
VolABmR = as.single(wVolABmR)
)$VolABmR
return(volume)
}
BDATVOLABMR(wBDATBArtNr = 1, wD1 = 30, wH1 = 1.3, wD2 = 0, wH2 = 0, wHges = 40,
wA = 1, wB = 30, wSekLng = 0.1, wIErr = 0, wVolABmR = 0)
BDATVOLABMR <- function(
wBDATBArtNr,
wD1,
wH1,
wD2,
wH2,
wHges,
wA,
wB,
wSekLng,
wIErr,
wVolABmR
){
volume <- .Fortran(
# "BDATVolABmR",
"bdatvolabmr",
as.integer(wBDATBArtNr),
as.single(wD1),
as.single(wH1),
as.single(wD2),
as.single(wH2),
as.single(wHges),
as.single(wA),
as.single(wB),
as.single(wSekLng),
as.integer(wIErr),
VolABmR = as.single(wVolABmR)
)$VolABmR
return(volume)
}
BDATVOLABMR(wBDATBArtNr = 1, wD1 = 30, wH1 = 1.3, wD2 = 0, wH2 = 0, wHges = 40,
wA = 1, wB = 30, wSekLng = 0.1, wIErr = 0, wVolABmR = 0)
BDATVOLABMR <- function(
wBDATBArtNr,
wD1,
wH1,
wD2,
wH2,
wHges,
wA,
wB,
wSekLng,
wIErr,
wVolABmR
){
volume <- .Fortran(
"BDATVOLABmR",
# "bdatvolabmr",
as.integer(wBDATBArtNr),
as.single(wD1),
as.single(wH1),
as.single(wD2),
as.single(wH2),
as.single(wHges),
as.single(wA),
as.single(wB),
as.single(wSekLng),
as.integer(wIErr),
VolABmR = as.single(wVolABmR)
)$VolABmR
return(volume)
}
BDATVOLABMR(wBDATBArtNr = 1, wD1 = 30, wH1 = 1.3, wD2 = 0, wH2 = 0, wHges = 40,
wA = 1, wB = 30, wSekLng = 0.1, wIErr = 0, wVolABmR = 0)
volume <- .Fortran(
"BDATVolABmR2",
# "bdatvolabmr",
as.integer(wBDATBArtNr),
as.single(wD1),
as.single(wH1),
as.single(wD2),
as.single(wH2),
as.single(wHges),
as.single(wA),
as.single(wB),
as.single(wSekLng),
as.integer(wIErr),
VolABmR = as.single(wVolABmR)
)$VolABmR
BDATVOLABMR <- function(
wBDATBArtNr,
wD1,
wH1,
wD2,
wH2,
wHges,
wA,
wB,
wSekLng,
wIErr,
wVolABmR
){
volume <- .Fortran(
"BDATVolABmR2",
# "bdatvolabmr",
as.integer(wBDATBArtNr),
as.single(wD1),
as.single(wH1),
as.single(wD2),
as.single(wH2),
as.single(wHges),
as.single(wA),
as.single(wB),
as.single(wSekLng),
as.integer(wIErr),
VolABmR = as.single(wVolABmR)
)$VolABmR
return(volume)
}
BDATVOLABMR(wBDATBArtNr = 1, wD1 = 30, wH1 = 1.3, wD2 = 0, wH2 = 0, wHges = 40,
wA = 1, wB = 30, wSekLng = 0.1, wIErr = 0, wVolABmR = 0)
