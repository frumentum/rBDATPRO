{
    "collab_server" : "",
    "contents" : "#' @title Volume of tree segment\n#'\n#' @description this function calculates the volume of a tree segment given\n#'  species, diameter, height (NOT YET: d03), beginning and end height\n#' of the segment. One can choose if bark should be included or excluded via\n#' the boolean parameter bark, which if set to TRUE includes bark.\n#'\n#' @param sp species code from BDAT\n#' @param d diameter in breast height (dbh) from tree\n#' @param h height of tree\n#' @param lh lower height in tree of segment for which volume is required\n#' @param uh upper height in tree of segment for which volume is required\n#' @param bark boolean, if TRUE volume including bark is calculated\n#' @export\n#' @return volume with bark of given segment inside stem in cubic meter\n\nget_vol <- function(\n  sp,\n  d,\n  h,\n  lh,\n  uh,\n  H1 = 1.3,\n  D2 = 0,\n  H2 = 0,\n  SekLng = 0.1,\n  IFeh = 0,\n  VolABmR = 0,\n  VolABoR = 0,\n  bark\n){\n  # at first load BDAT\n  if (isTRUE(bark)) {\n    loadBDAT(fun = \"BDATVOLABMR\")\n  } else loadBDAT(fun = \"BDATVOLABOR\")\n  get_vol_dat <- data.frame(BDATArt = sp,\n                            dbh = d,\n                            h = h,\n                            a = lh,\n                            b = uh,\n                            H1 = H1,\n                            D2 = D2,\n                            H2 = H2,\n                            wSekLng = SekLng,\n                            wIErr = IFeh,\n                            wVolABmR = VolABmR,\n                            wVolABoR = VolABoR)\n\n  if (isTRUE(bark)){\n    vol <- sapply(1:nrow(get_vol_dat), function(a){\n      BDATVOLABMR(wBDATBArtNr = get_vol_dat$BDATArt[a],\n                  wD1 = get_vol_dat$dbh[a],\n                  wH1 = get_vol_dat$H1[a],\n                  wD2 = get_vol_dat$D2[a],\n                  wH2 = get_vol_dat$H2[a],\n                  wHges = get_vol_dat$h[a],\n                  wA = get_vol_dat$a[a],\n                  wB = get_vol_dat$b[a],\n                  wSekLng = get_vol_dat$wSekLng[a],\n                  wIErr = get_vol_dat$wIErr[a],\n                  wVolABmR = get_vol_dat$wVolABmR[a])})\n  } else {\n    vol <- sapply(1:nrow(get_vol_dat), function(a){\n      BDATVOLABOR(wBDATBArtNr = get_vol_dat$BDATArt[a],\n                  wD1 = get_vol_dat$dbh[a],\n                  wH1 = get_vol_dat$H1[a],\n                  wD2 = get_vol_dat$D2[a],\n                  wH2 = get_vol_dat$H2[a],\n                  wHges = get_vol_dat$h[a],\n                  wA = get_vol_dat$a[a],\n                  wB = get_vol_dat$b[a],\n                  wSekLng = get_vol_dat$wSekLng[a],\n                  wIErr = get_vol_dat$wIErr[a],\n                  wVolABoR = get_vol_dat$wVolABoR[a])})\n  }\n  ## there might be equal values in a and b, and the calculated value should be\n  ## zero: BDAT obviously is not able to produce zero --> override such case!\n  vol <- ifelse(get_vol_dat$a == get_vol_dat$b, 0, vol)\n  ## add indicator, whether calculated volume includes bark (=> TRUE)\n  attr(vol, \"bark\") <- bark\n\n  # remove fortran function from global.env\n  if(isTRUE(bark)) rm(BDATVOLABMR, envir = .GlobalEnv) else\n    rm(BDATVOLABOR, envir = .GlobalEnv)\n\n  return(vol)\n}\n",
    "created" : 1516191549224.000,
    "dirty" : false,
    "encoding" : "ISO8859-1",
    "folds" : "",
    "hash" : "1354441058",
    "id" : "A12EF5F3",
    "lastKnownWriteTime" : 1511886288,
    "last_content_update" : 1511886288,
    "path" : "H:/FVA-Projekte/P01479_HE_VSB/Programme/Eigenentwicklung/RCode/rBDATPRO/R/get_vol.R",
    "project_path" : "R/get_vol.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}